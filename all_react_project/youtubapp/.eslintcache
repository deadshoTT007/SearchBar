[{"/home/shovanraj/Desktop/youtubapp/src/index.js":"1","/home/shovanraj/Desktop/youtubapp/src/App.js":"2","/home/shovanraj/Desktop/youtubapp/src/reportWebVitals.js":"3","/home/shovanraj/Desktop/youtubapp/src/Youtube.js":"4","/home/shovanraj/Desktop/youtubapp/src/SearchBar.js":"5","/home/shovanraj/Desktop/youtubapp/src/VideoList.js":"6","/home/shovanraj/Desktop/youtubapp/src/VideoItem.js":"7","/home/shovanraj/Desktop/youtubapp/src/VideoDetail.js":"8"},{"size":500,"mtime":1609237187853,"results":"9","hashOfConfig":"10"},{"size":1549,"mtime":1609840265044,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609237187853,"results":"12","hashOfConfig":"10"},{"size":112,"mtime":1609237722321,"results":"13","hashOfConfig":"10"},{"size":766,"mtime":1609840217526,"results":"14","hashOfConfig":"10"},{"size":260,"mtime":1609839930420,"results":"15","hashOfConfig":"10"},{"size":598,"mtime":1609840102602,"results":"16","hashOfConfig":"10"},{"size":968,"mtime":1609840176351,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"125x9oo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/home/shovanraj/Desktop/youtubapp/src/index.js",[],["40","41"],"/home/shovanraj/Desktop/youtubapp/src/App.js",["42","43"],"import React from 'react';\nimport SearchBar from './SearchBar'\nimport VideoList from './VideoList'\nimport VideoDetail from './VideoDetail'\nimport VideoItem from './VideoItem'\n\n\nimport './App.css';\n\nimport * as m from '@material-ui/core' \nimport youtube from './Youtube'\n\nclass App extends React.Component{\n\nstate={\n  videos:[],\n  selectedVideo:null\n}\n\nonVideoSelect=(video)=>{\n  this.setState({selectedVideo:video})\n}\n\nonFormSubmit=async(search)=>{\nconst response=await youtube.get('search',{\n  params:{\n    part:\"snippet\",\n    maxResult:5,\n    key:\"AIzaSyALYkvlrMFVaF002QH6LGpP0WIfTZf4BFE\",\n    q:search\n  }\n})\n await this.setState({videos:response.data.items,selectedVideo:response.data.items[0]})\nconsole.log(response,\"adasd\")\nreturn;\n}\n\n  render() {\n    const {selectedVideo}=this.state;\n    // const {videos}=this.state;\n    console.log(this.state)\n\n    return (\n      <>\n      <m.Grid  container justify=\"center\" spacing={10}>\n        <m.Grid style={{margin:\"10px\"}} item xs={11}>\n          <m.Grid container spacing={10}>\n            <m.Grid  item xs={12}>\n              <SearchBar onFormSubmit={this.onFormSubmit}/> \n            </m.Grid>\n            <m.Grid container xs={12}  style={{width:\"100vw\",height:\"90vh\"}} xs={8}>\n             <VideoDetail selectedVideo={selectedVideo} />\n            </m.Grid>\n            <m.Grid xs={4}>\n              <VideoList videos={this.state.videos} onVideoSelect={this.onVideoSelect}/>\n            </m.Grid> \n          </m.Grid>\n        </m.Grid>\n      </m.Grid>\n      </>\n    );\n  }\n}\nexport default App;","/home/shovanraj/Desktop/youtubapp/src/reportWebVitals.js",[],"/home/shovanraj/Desktop/youtubapp/src/Youtube.js",[],["44","45"],"/home/shovanraj/Desktop/youtubapp/src/SearchBar.js",["46"],"import React, { Component } from 'react'\nimport * as m from '@material-ui/core'\n\nexport default class SearchBar extends Component {\n\n    state={\n        searchTerm:\"\"\n    }\nhandleChange=(e)=>{\nthis.setState({searchTerm:e.target.value})\n}\nhandleSubmit=(e)=>{\n    e.preventDefault()\n    const {searchTerm}=this.state\n    const {onFormSubmit}=this.props\n    onFormSubmit(searchTerm)\n}\n\n    render() {\n        console.log(this.state.searchTerm)\n        return (\n            <m.Paper style={{margin:\"10px\"}} elevation={6} style={{padding:\"25px\"}}>\n                <form onSubmit={this.handleSubmit}>\n                    <m.TextField fullWidth label=\"Search...\" onChange={this.handleChange}></m.TextField>\n                </form>\n            </m.Paper>\n        )\n    }\n}\n\n","/home/shovanraj/Desktop/youtubapp/src/VideoList.js",[],"/home/shovanraj/Desktop/youtubapp/src/VideoItem.js",["47"],"import React from 'react'\nimport * as m from \"@material-ui/core\"\n\nexport default function VideoItem({video,onVideoSelect}) {\n    console.log(video,\"video\")\n    return (\n        <m.Grid item xs={12}>\n            <m.Paper style={{display:\"flex\",alignItems:\"center\"}}>\n                <img style={{marginLeft:\"20px\",marginBottom:\"20px\",marginRight:\"10px\",borderRadius:\"6px\",cursor:\"pointer\"}} src={video.snippet.thumbnails.medium.url} onClick={()=>onVideoSelect(video)} alt=\"image\"/>\n                <m.Typography >{video.snippet.title}</m.Typography>\n            </m.Paper>\n        </m.Grid>\n    )\n}\n","/home/shovanraj/Desktop/youtubapp/src/VideoDetail.js",["48"],"import React from 'react'\n// import * as m from '@material-ui/core'\nimport * as m from '@material-ui/core';\nconst VideoDetail=({selectedVideo})=>{\n  \n    console.log(selectedVideo)\n    if(!selectedVideo){\n        return <div>Loading....</div>\n    }\n    const viodeoSrc=`https://www.youtube.com/embed/${selectedVideo.id.videoId}`\n  \n\nreturn(\n    <>\n    <m.Paper elevation={6} style={{height:\"90%\"}} style={{width:\"100%\"}}>\n        <iframe frameBorder=\"0\" height=\"100%\" title=\"Video Player\" width=\"100%\" src={viodeoSrc}/>\n    </m.Paper>\n    <m.Paper style={{margin:\"20px\",padding:\"20px\"}} elevation={6} >\n        <m.Typography variant=\"h4\" >{selectedVideo.snippet.title}-{selectedVideo.snippet.channelTitle}</m.Typography>\n        <m.Typography variant=\"subtitle1\">{selectedVideo.snippet.channelName}</m.Typography>\n        <m.Typography variant=\"subtitle2\">{selectedVideo.snippet.description}</m.Typography>\n    </m.Paper>\n    </>\n    \n) ;\n}\nexport default VideoDetail\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":51,"column":78,"nodeType":"59","endLine":51,"endColumn":84},{"ruleId":"49","replacedBy":"60"},{"ruleId":"51","replacedBy":"61"},{"ruleId":"57","severity":1,"message":"58","line":22,"column":60,"nodeType":"59","endLine":22,"endColumn":84},{"ruleId":"62","severity":1,"message":"63","line":9,"column":17,"nodeType":"64","endLine":9,"endColumn":215},{"ruleId":"57","severity":1,"message":"58","line":15,"column":51,"nodeType":"59","endLine":15,"endColumn":73},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'VideoItem' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["65"],["66"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]